//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HotChocolate.Stitching.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("HotChocolate.Stitching.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This resolver can only handle argument scopes..
        /// </summary>
        internal static string ArgumentScopedVariableResolver_CannotHandleVariable {
            get {
                return ResourceManager.GetString("ArgumentScopedVariableResolver_CannotHandleVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An argument with the name `{0}` does not exist..
        /// </summary>
        internal static string ArgumentScopedVariableResolver_InvalidArgumentName {
            get {
                return ResourceManager.GetString("ArgumentScopedVariableResolver_InvalidArgumentName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the fields on which a computed field is dependent on..
        /// </summary>
        internal static string ComputedDirectiveType_Description {
            get {
                return ResourceManager.GetString("ComputedDirectiveType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the schema to which this field shall be delegated to..
        /// </summary>
        internal static string DelegateDirectiveType_Description {
            get {
                return ResourceManager.GetString("DelegateDirectiveType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This resolver can only handle field scopes..
        /// </summary>
        internal static string FieldScopedVariableResolver_CannotHandleVariable {
            get {
                return ResourceManager.GetString("FieldScopedVariableResolver_CannotHandleVariable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A field with the name `{0}` does not exist..
        /// </summary>
        internal static string FieldScopedVariableResolver_InvalidFieldName {
            get {
                return ResourceManager.GetString("FieldScopedVariableResolver_InvalidFieldName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The json mustn&apos;t be null or empty..
        /// </summary>
        internal static string IntrospectionDeserializer_Json_NullOrEmpty {
            get {
                return ResourceManager.GetString("IntrospectionDeserializer_Json_NullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to query IntrospectionQuery {
        ///    __schema {
        ///      queryType { name }
        ///      mutationType { name }
        ///      subscriptionType { name }
        ///      types {
        ///        ...FullType
        ///      }
        ///      directives {
        ///        name
        ///        description
        ///        args {
        ///          ...InputValue
        ///        }
        ///        onOperation
        ///        onFragment
        ///        onField
        ///      }
        ///    }
        ///  }
        ///
        ///  fragment FullType on __Type {
        ///    kind
        ///    name
        ///    description
        ///    fields(includeDeprecated: true) {
        ///      name
        ///      description
        ///      a [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IntrospectionQuery {
            get {
                return ResourceManager.GetString("IntrospectionQuery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot build a remote executor without a schema..
        /// </summary>
        internal static string RemoteExecutorBuilder_NoSchema {
            get {
                return ResourceManager.GetString("RemoteExecutorBuilder_NoSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot build a remote executor without a schema name..
        /// </summary>
        internal static string RemoteExecutorBuilder_NoSchemaName {
            get {
                return ResourceManager.GetString("RemoteExecutorBuilder_NoSchemaName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified scope `{0}` is not supported..
        /// </summary>
        internal static string RootScopedVariableResolver_ScopeNotSupported {
            get {
                return ResourceManager.GetString("RootScopedVariableResolver_ScopeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided type must extend `HotChocolate.Types.ScalarType` in order to be recognised as valid scalar type..
        /// </summary>
        internal static string ScalarType_InvalidBaseType {
            get {
                return ResourceManager.GetString("ScalarType_InvalidBaseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The schema name mustn&apos;t be null or empty..
        /// </summary>
        internal static string Schema_EmptyOrNull {
            get {
                return ResourceManager.GetString("Schema_EmptyOrNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no schema with the given name `{0}`..
        /// </summary>
        internal static string Schema_NotFound {
            get {
                return ResourceManager.GetString("Schema_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The first token must be a start of file token..
        /// </summary>
        internal static string SelectionPathParser_StartOfFileTokenExpected {
            get {
                return ResourceManager.GetString("SelectionPathParser_StartOfFileTokenExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotates the original name of a type..
        /// </summary>
        internal static string SourceDirectiveType_Description {
            get {
                return ResourceManager.GetString("SourceDirectiveType_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The original name of the annotated type..
        /// </summary>
        internal static string SourceDirectiveType_Name_Description {
            get {
                return ResourceManager.GetString("SourceDirectiveType_Name_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name of the schema to which this type belongs to..
        /// </summary>
        internal static string SourceDirectiveType_Schema_Description {
            get {
                return ResourceManager.GetString("SourceDirectiveType_Schema_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified type is not supported..
        /// </summary>
        internal static string Type_NotSupported {
            get {
                return ResourceManager.GetString("Type_NotSupported", resourceCulture);
            }
        }
    }
}
